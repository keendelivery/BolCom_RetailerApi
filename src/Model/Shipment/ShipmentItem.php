<?php

// phpcs:ignoreFile
// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Shipment;

final class ShipmentItem
{
    private $orderItemId;
    private $orderId;
    private $orderDate;
    private $latestDeliveryDate;
    private $ean;
    private $title;
    private $quantity;
    private $offerPrice;
    private $offerCondition;
    private $offerReference;
    private $fulfilmentMethod;
    private $selectedDeliveryWindow;

    public function __construct(\BolCom\RetailerApi\Model\Order\OrderItemId $orderItemId, \BolCom\RetailerApi\Model\Order\OrderId $orderId, \BolCom\RetailerApi\Model\DateTime $orderDate, \BolCom\RetailerApi\Model\Date $latestDeliveryDate, \BolCom\RetailerApi\Model\Offer\Ean $ean, \BolCom\RetailerApi\Model\Offer\Title $title, \BolCom\RetailerApi\Model\Order\Quantity $quantity, \BolCom\RetailerApi\Model\CurrencyAmount $offerPrice, \BolCom\RetailerApi\Model\Offer\Condition $offerCondition, ?\BolCom\RetailerApi\Model\Offer\ReferenceCode $offerReference, \BolCom\RetailerApi\Model\Offer\FulfilmentMethod $fulfilmentMethod, ?\BolCom\RetailerApi\Model\Order\SelectedDeliveryWindow $selectedDeliveryWindow)
    {
        $this->orderItemId = $orderItemId;
        $this->orderId = $orderId;
        $this->orderDate = $orderDate;
        $this->latestDeliveryDate = $latestDeliveryDate;
        $this->ean = $ean;
        $this->title = $title;
        $this->quantity = $quantity;
        $this->offerPrice = $offerPrice;
        $this->offerCondition = $offerCondition;
        $this->offerReference = $offerReference;
        $this->fulfilmentMethod = $fulfilmentMethod;
        $this->selectedDeliveryWindow = $selectedDeliveryWindow;
    }

    public function orderItemId(): \BolCom\RetailerApi\Model\Order\OrderItemId
    {
        return $this->orderItemId;
    }

    public function orderId(): \BolCom\RetailerApi\Model\Order\OrderId
    {
        return $this->orderId;
    }

    public function orderDate(): \BolCom\RetailerApi\Model\DateTime
    {
        return $this->orderDate;
    }

    public function latestDeliveryDate(): \BolCom\RetailerApi\Model\Date
    {
        return $this->latestDeliveryDate;
    }

    public function ean(): \BolCom\RetailerApi\Model\Offer\Ean
    {
        return $this->ean;
    }

    public function title(): \BolCom\RetailerApi\Model\Offer\Title
    {
        return $this->title;
    }

    public function quantity(): \BolCom\RetailerApi\Model\Order\Quantity
    {
        return $this->quantity;
    }

    public function offerPrice(): \BolCom\RetailerApi\Model\CurrencyAmount
    {
        return $this->offerPrice;
    }

    public function offerCondition(): \BolCom\RetailerApi\Model\Offer\Condition
    {
        return $this->offerCondition;
    }

    public function offerReference(): ?\BolCom\RetailerApi\Model\Offer\ReferenceCode
    {
        return $this->offerReference;
    }

    public function fulfilmentMethod(): \BolCom\RetailerApi\Model\Offer\FulfilmentMethod
    {
        return $this->fulfilmentMethod;
    }

    public function selectedDeliveryWindow(): ?\BolCom\RetailerApi\Model\Order\SelectedDeliveryWindow
    {
        return $this->selectedDeliveryWindow;
    }

    public function withOrderItemId(\BolCom\RetailerApi\Model\Order\OrderItemId $orderItemId): ShipmentItem
    {
        return new self($orderItemId, $this->orderId, $this->orderDate, $this->latestDeliveryDate, $this->ean, $this->title, $this->quantity, $this->offerPrice, $this->offerCondition, $this->offerReference, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withOrderId(\BolCom\RetailerApi\Model\Order\OrderId $orderId): ShipmentItem
    {
        return new self($this->orderItemId, $orderId, $this->orderDate, $this->latestDeliveryDate, $this->ean, $this->title, $this->quantity, $this->offerPrice, $this->offerCondition, $this->offerReference, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withOrderDate(\BolCom\RetailerApi\Model\DateTime $orderDate): ShipmentItem
    {
        return new self($this->orderItemId, $this->orderId, $orderDate, $this->latestDeliveryDate, $this->ean, $this->title, $this->quantity, $this->offerPrice, $this->offerCondition, $this->offerReference, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withLatestDeliveryDate(\BolCom\RetailerApi\Model\Date $latestDeliveryDate): ShipmentItem
    {
        return new self($this->orderItemId, $this->orderId, $this->orderDate, $latestDeliveryDate, $this->ean, $this->title, $this->quantity, $this->offerPrice, $this->offerCondition, $this->offerReference, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withEan(\BolCom\RetailerApi\Model\Offer\Ean $ean): ShipmentItem
    {
        return new self($this->orderItemId, $this->orderId, $this->orderDate, $this->latestDeliveryDate, $ean, $this->title, $this->quantity, $this->offerPrice, $this->offerCondition, $this->offerReference, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withTitle(\BolCom\RetailerApi\Model\Offer\Title $title): ShipmentItem
    {
        return new self($this->orderItemId, $this->orderId, $this->orderDate, $this->latestDeliveryDate, $this->ean, $title, $this->quantity, $this->offerPrice, $this->offerCondition, $this->offerReference, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withQuantity(\BolCom\RetailerApi\Model\Order\Quantity $quantity): ShipmentItem
    {
        return new self($this->orderItemId, $this->orderId, $this->orderDate, $this->latestDeliveryDate, $this->ean, $this->title, $quantity, $this->offerPrice, $this->offerCondition, $this->offerReference, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withOfferPrice(\BolCom\RetailerApi\Model\CurrencyAmount $offerPrice): ShipmentItem
    {
        return new self($this->orderItemId, $this->orderId, $this->orderDate, $this->latestDeliveryDate, $this->ean, $this->title, $this->quantity, $offerPrice, $this->offerCondition, $this->offerReference, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withOfferCondition(\BolCom\RetailerApi\Model\Offer\Condition $offerCondition): ShipmentItem
    {
        return new self($this->orderItemId, $this->orderId, $this->orderDate, $this->latestDeliveryDate, $this->ean, $this->title, $this->quantity, $this->offerPrice, $offerCondition, $this->offerReference, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withOfferReference(?\BolCom\RetailerApi\Model\Offer\ReferenceCode $offerReference): ShipmentItem
    {
        return new self($this->orderItemId, $this->orderId, $this->orderDate, $this->latestDeliveryDate, $this->ean, $this->title, $this->quantity, $this->offerPrice, $this->offerCondition, $offerReference, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withFulfilmentMethod(\BolCom\RetailerApi\Model\Offer\FulfilmentMethod $fulfilmentMethod): ShipmentItem
    {
        return new self($this->orderItemId, $this->orderId, $this->orderDate, $this->latestDeliveryDate, $this->ean, $this->title, $this->quantity, $this->offerPrice, $this->offerCondition, $this->offerReference, $fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withSelectedDeliveryWindow(?\BolCom\RetailerApi\Model\Order\SelectedDeliveryWindow $selectedDeliveryWindow): ShipmentItem
    {
        return new self($this->orderItemId, $this->orderId, $this->orderDate, $this->latestDeliveryDate, $this->ean, $this->title, $this->quantity, $this->offerPrice, $this->offerCondition, $this->offerReference, $this->fulfilmentMethod, $selectedDeliveryWindow);
    }

    public static function fromArray(array $data): ShipmentItem
    {
        if (! isset($data['orderItemId']) || ! \is_string($data['orderItemId'])) {
            throw new \InvalidArgumentException("Key 'orderItemId' is missing in data array or is not a string");
        }

        $orderItemId = \BolCom\RetailerApi\Model\Order\OrderItemId::fromString($data['orderItemId']);

        if (! isset($data['orderId']) || ! \is_string($data['orderId'])) {
            throw new \InvalidArgumentException("Key 'orderId' is missing in data array or is not a string");
        }

        $orderId = \BolCom\RetailerApi\Model\Order\OrderId::fromString($data['orderId']);

        if (! isset($data['orderDate']) || ! \is_string($data['orderDate'])) {
            throw new \InvalidArgumentException("Key 'orderDate' is missing in data array or is not a string");
        }

        $orderDate = \BolCom\RetailerApi\Model\DateTime::fromString($data['orderDate']);

        if (! isset($data['latestDeliveryDate']) || ! \is_string($data['latestDeliveryDate'])) {
            throw new \InvalidArgumentException("Key 'latestDeliveryDate' is missing in data array or is not a string");
        }

        $latestDeliveryDate = \BolCom\RetailerApi\Model\Date::fromString($data['latestDeliveryDate']);

        if (! isset($data['ean']) || ! \is_string($data['ean'])) {
            throw new \InvalidArgumentException("Key 'ean' is missing in data array or is not a string");
        }

        $ean = \BolCom\RetailerApi\Model\Offer\Ean::fromString($data['ean']);

        if (! isset($data['title']) || ! \is_string($data['title'])) {
            throw new \InvalidArgumentException("Key 'title' is missing in data array or is not a string");
        }

        $title = \BolCom\RetailerApi\Model\Offer\Title::fromString($data['title']);

        if (! isset($data['quantity']) || ! \is_int($data['quantity'])) {
            throw new \InvalidArgumentException("Key 'quantity' is missing in data array or is not a int");
        }

        $quantity = \BolCom\RetailerApi\Model\Order\Quantity::fromScalar($data['quantity']);

        if (! isset($data['offerPrice']) || (! \is_float($data['offerPrice']) && ! \is_int($data['offerPrice']))) {
            throw new \InvalidArgumentException("Key 'offerPrice' is missing in data array or is not a float");
        }

        $offerPrice = \BolCom\RetailerApi\Model\CurrencyAmount::fromScalar($data['offerPrice']);

        if (! isset($data['offerCondition']) || ! \is_string($data['offerCondition'])) {
            throw new \InvalidArgumentException("Key 'offerCondition' is missing in data array or is not a string");
        }

        $offerCondition = \BolCom\RetailerApi\Model\Offer\Condition::fromValue($data['offerCondition']);

        if (isset($data['offerReference'])) {
            if (! \is_string($data['offerReference'])) {
                throw new \InvalidArgumentException("Value for 'offerReference' is not a string in data array");
            }

            $offerReference = \BolCom\RetailerApi\Model\Offer\ReferenceCode::fromString($data['offerReference']);
        } else {
            $offerReference = null;
        }

        if (! isset($data['fulfilmentMethod']) || ! \is_string($data['fulfilmentMethod'])) {
            throw new \InvalidArgumentException("Key 'fulfilmentMethod' is missing in data array or is not a string");
        }

        $fulfilmentMethod = \BolCom\RetailerApi\Model\Offer\FulfilmentMethod::fromValue($data['fulfilmentMethod']);

        if (isset($data['selectedDeliveryWindow'])) {
            if (! \is_array($data['selectedDeliveryWindow'])) {
                throw new \InvalidArgumentException("Value for 'selectedDeliveryWindow' is not an array in data array");
            }

            $selectedDeliveryWindow = \BolCom\RetailerApi\Model\Order\SelectedDeliveryWindow::fromArray($data['selectedDeliveryWindow']);
        } else {
            $selectedDeliveryWindow = null;
        }

        return new self(
            $orderItemId,
            $orderId,
            $orderDate,
            $latestDeliveryDate,
            $ean,
            $title,
            $quantity,
            $offerPrice,
            $offerCondition,
            $offerReference,
            $fulfilmentMethod,
            $selectedDeliveryWindow
        );
    }
}
