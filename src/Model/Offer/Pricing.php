<?php

// phpcs:ignoreFile
// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Offer;

final class Pricing
{
    private $bundlePrices;

    /**
     * @param \BolCom\RetailerApi\Model\Offer\BundlePrice[] $bundlePrices
     */
    public function __construct(BundlePrice ...$bundlePrices)
    {
        $this->bundlePrices = $bundlePrices;
    }

    /**
     * @return \BolCom\RetailerApi\Model\Offer\BundlePrice[]
     */
    public function bundlePrices(): array
    {
        return $this->bundlePrices;
    }

    /**
     * @param \BolCom\RetailerApi\Model\Offer\BundlePrice[] $bundlePrices
     * @return \BolCom\RetailerApi\Model\Offer\Pricing
     */
    public function withBundlePrices(array $bundlePrices): Pricing
    {
        return new self(...$bundlePrices);
    }

    public static function fromArray(array $data): Pricing
    {
        if (! isset($data['bundlePrices']) || ! \is_array($data['bundlePrices'])) {
            throw new \InvalidArgumentException("Key 'bundlePrices' is missing in data array or is not an array");
        }

        $bundlePrices = [];

        foreach ($data['bundlePrices'] as $__value) {
            if (! \is_array($data['bundlePrices'])) {
                throw new \InvalidArgumentException("Key 'bundlePrices' in data array or is not an array of arrays");
            }

            $bundlePrices[] = BundlePrice::fromArray($__value);
        }

        return new self(...$bundlePrices);
    }

    public function toArray(): array
    {
        $bundlePrices = [];

        foreach ($this->bundlePrices as $__value) {
            $bundlePrices[] = $__value->toArray();
        }

        return [
            'bundlePrices' => $bundlePrices,
        ];
    }
}
