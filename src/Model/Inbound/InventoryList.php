<?php

// phpcs:ignoreFile
// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Inbound;

final class InventoryList
{
    private $totalCount;
    private $totalPageCount;
    private $offers;

    /**
     * @param int $totalCount
     * @param int $totalPageCount
     * @param \BolCom\RetailerApi\Model\Inbound\InventoryOffer[] $offers
     */
    public function __construct(int $totalCount, int $totalPageCount, array $offers)
    {
        $this->totalCount = $totalCount;
        $this->totalPageCount = $totalPageCount;
            $this->offers = [];
            foreach ($offers as $__value) {
                if (! $__value instanceof \BolCom\RetailerApi\Model\Inbound\InventoryOffer) {
                    throw new \InvalidArgumentException('offers expected an array of BolCom\RetailerApi\Model\Inbound\InventoryOffer');
                }
                $this->offers[] = $__value;
            }
    }

    public function totalCount(): int
    {
        return $this->totalCount;
    }

    public function totalPageCount(): int
    {
        return $this->totalPageCount;
    }

    /**
     * @return \BolCom\RetailerApi\Model\Inbound\InventoryOffer[]
     */
    public function offers(): array
    {
        return $this->offers;
    }

    public function withTotalCount(int $totalCount): InventoryList
    {
        return new self($totalCount, $this->totalPageCount, $this->offers);
    }

    public function withTotalPageCount(int $totalPageCount): InventoryList
    {
        return new self($this->totalCount, $totalPageCount, $this->offers);
    }

    /**
     * @param \BolCom\RetailerApi\Model\Inbound\InventoryOffer[] $offers
     * @return \BolCom\RetailerApi\Model\Inbound\InventoryList
     */
    public function withOffers(array $offers): InventoryList
    {
        return new self($this->totalCount, $this->totalPageCount, $offers);
    }

    public static function fromArray(array $data): InventoryList
    {
        if (! isset($data['totalCount']) || ! \is_int($data['totalCount'])) {
            throw new \InvalidArgumentException("Key 'totalCount' is missing in data array or is not a int");
        }

        $totalCount = $data['totalCount'];

        if (! isset($data['totalPageCount']) || ! \is_int($data['totalPageCount'])) {
            throw new \InvalidArgumentException("Key 'totalPageCount' is missing in data array or is not a int");
        }

        $totalPageCount = $data['totalPageCount'];

        if (! isset($data['offers']) || ! \is_array($data['offers'])) {
            throw new \InvalidArgumentException("Key 'offers' is missing in data array or is not an array");
        }

        $offers = [];

        foreach ($data['offers'] as $__value) {
            if (! \is_array($data['offers'])) {
                throw new \InvalidArgumentException("Key 'offers' in data array or is not an array of arrays");
            }

            $offers[] = InventoryOffer::fromArray($__value);
        }

        return new self(
            $totalCount,
            $totalPageCount,
            $offers
        );
    }
}
