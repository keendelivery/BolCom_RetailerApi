<?php

// phpcs:ignoreFile
// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Inbound\Query;

final class GetInventoryList extends \Prooph\Common\Messaging\Query
{
    use \Prooph\Common\Messaging\PayloadTrait;

    public const MESSAGE_NAME = 'BolCom\RetailerApi\Model\Inbound\Query\GetInventoryList';

    protected $messageName = self::MESSAGE_NAME;

    public function page(): int
    {
        return $this->payload['page'];
    }

    public function quantity(): \BolCom\RetailerApi\Model\Inbound\InventoryQuantityInput
    {
        return \BolCom\RetailerApi\Model\Inbound\InventoryQuantityInput::fromString($this->payload['quantity']);
    }

    public function stock(): \BolCom\RetailerApi\Model\Inbound\InventoryStock
    {
        return \BolCom\RetailerApi\Model\Inbound\InventoryStock::fromValue($this->payload['stock']);
    }

    public function state(): \BolCom\RetailerApi\Model\Inbound\InventoryState
    {
        return \BolCom\RetailerApi\Model\Inbound\InventoryState::fromValue($this->payload['state']);
    }

    public function query(): string
    {
        return $this->payload['query'];
    }

    public static function with(int $page, \BolCom\RetailerApi\Model\Inbound\InventoryQuantityInput $quantity, \BolCom\RetailerApi\Model\Inbound\InventoryStock $stock, \BolCom\RetailerApi\Model\Inbound\InventoryState $state, string $query): GetInventoryList
    {
        return new self([
            'page' => $page,
            'quantity' => $quantity->toString(),
            'stock' => $stock->value(),
            'state' => $state->value(),
            'query' => $query,
        ]);
    }

    protected function setPayload(array $payload): void
    {
        if (! isset($payload['page']) || ! \is_int($payload['page'])) {
            throw new \InvalidArgumentException("Key 'page' is missing in payload or is not a int");
        }

        if (! isset($payload['quantity']) || ! \is_string($payload['quantity'])) {
            throw new \InvalidArgumentException("Key 'quantity' is missing in payload or is not a string");
        }

        if (! isset($payload['stock']) || ! \is_string($payload['stock'])) {
            throw new \InvalidArgumentException("Key 'stock' is missing in payload or is not a string");
        }

        if (! isset($payload['state']) || ! \is_string($payload['state'])) {
            throw new \InvalidArgumentException("Key 'state' is missing in payload or is not a string");
        }

        if (! isset($payload['query']) || ! \is_string($payload['query'])) {
            throw new \InvalidArgumentException("Key 'query' is missing in payload or is not a string");
        }

        $this->payload = $payload;
    }
}
