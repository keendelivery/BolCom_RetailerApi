<?php

// phpcs:ignoreFile
// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Inbound\Query;

final class GetInboundList extends \Prooph\Common\Messaging\Query
{
    use \Prooph\Common\Messaging\PayloadTrait;

    public const MESSAGE_NAME = 'BolCom\RetailerApi\Model\Inbound\Query\GetInboundList';

    protected $messageName = self::MESSAGE_NAME;

    public function reference(): ?\BolCom\RetailerApi\Model\Inbound\Reference
    {
        return isset($this->payload['reference']) ? \BolCom\RetailerApi\Model\Inbound\Reference::fromString($this->payload['reference']) : null;
    }

    public function bsku(): ?\BolCom\RetailerApi\Model\Inbound\BSku
    {
        return isset($this->payload['bsku']) ? \BolCom\RetailerApi\Model\Inbound\BSku::fromString($this->payload['bsku']) : null;
    }

    public function creationStart(): ?\BolCom\RetailerApi\Model\Date
    {
        return isset($this->payload['creationStart']) ? \BolCom\RetailerApi\Model\Date::fromString($this->payload['creationStart']) : null;
    }

    public function creationEnd(): ?\BolCom\RetailerApi\Model\Date
    {
        return isset($this->payload['creationEnd']) ? \BolCom\RetailerApi\Model\Date::fromString($this->payload['creationEnd']) : null;
    }

    public function state(): ?\BolCom\RetailerApi\Model\Inbound\State
    {
        return isset($this->payload['state']) ? \BolCom\RetailerApi\Model\Inbound\State::fromValue($this->payload['state']) : null;
    }

    public function page(): ?int
    {
        return $this->payload['page'] ?? null;
    }

    public static function with(?\BolCom\RetailerApi\Model\Inbound\Reference $reference, ?\BolCom\RetailerApi\Model\Inbound\BSku $bsku, ?\BolCom\RetailerApi\Model\Date $creationStart, ?\BolCom\RetailerApi\Model\Date $creationEnd, ?\BolCom\RetailerApi\Model\Inbound\State $state, ?int $page): GetInboundList
    {
        return new self([
            'reference' => null === $reference ? null : $reference->toString(),
            'bsku' => null === $bsku ? null : $bsku->toString(),
            'creationStart' => null === $creationStart ? null : $creationStart->toString(),
            'creationEnd' => null === $creationEnd ? null : $creationEnd->toString(),
            'state' => null === $state ? null : $state->value(),
            'page' => $page,
        ]);
    }

    protected function setPayload(array $payload): void
    {
        if (isset($payload['reference']) && ! \is_string($payload['reference'])) {
            throw new \InvalidArgumentException("Value for 'reference' is not a string in payload");
        }

        if (isset($payload['bsku']) && ! \is_string($payload['bsku'])) {
            throw new \InvalidArgumentException("Value for 'bsku' is not a string in payload");
        }

        if (isset($payload['creationStart']) && ! \is_string($payload['creationStart'])) {
            throw new \InvalidArgumentException("Value for 'creationStart' is not a string in payload");
        }

        if (isset($payload['creationEnd']) && ! \is_string($payload['creationEnd'])) {
            throw new \InvalidArgumentException("Value for 'creationEnd' is not a string in payload");
        }

        if (isset($payload['state']) && ! \is_string($payload['state'])) {
            throw new \InvalidArgumentException("Value for 'state' is not a string in payload");
        }

        if (isset($payload['page']) && ! \is_int($payload['page'])) {
            throw new \InvalidArgumentException("Value for 'page' is not a int in payload");
        }

        $this->payload = $payload;
    }
}
