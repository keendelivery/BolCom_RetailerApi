<?php

// phpcs:ignoreFile
// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Inbound;

final class State
{
    public const OPTIONS = [
        'Draft' => 'Draft',
        'PreAnnounced' => 'PreAnnounced',
        'ArrivedAtWH' => 'ArrivedAtWH',
        'Cancelled' => 'Cancelled',
    ];

    public const Draft = 'Draft';
    public const PreAnnounced = 'PreAnnounced';
    public const ArrivedAtWH = 'ArrivedAtWH';
    public const Cancelled = 'Cancelled';

    private $name;
    private $value;

    private function __construct(string $name)
    {
        $this->name = $name;
        $this->value = self::OPTIONS[$name];
    }

    public static function draft(): self
    {
        return new self('Draft');
    }

    public static function preAnnounced(): self
    {
        return new self('PreAnnounced');
    }

    public static function arrivedAtWH(): self
    {
        return new self('ArrivedAtWH');
    }

    public static function cancelled(): self
    {
        return new self('Cancelled');
    }

    public static function fromName(string $value): self
    {
        if (! isset(self::OPTIONS[$value])) {
            throw new \InvalidArgumentException('Unknown enum name given');
        }

        return self::{$value}();
    }

    public static function fromValue($value): self
    {
        foreach (self::OPTIONS as $name => $v) {
            if ($v === $value) {
                return self::{$name}();
            }
        }

        throw new \InvalidArgumentException('Unknown enum value given');
    }

    public function equals(State $other): bool
    {
        return \get_class($this) === \get_class($other) && $this->name === $other->name;
    }

    public function name(): string
    {
        return $this->name;
    }

    public function value()
    {
        return $this->value;
    }

    public function __toString(): string
    {
        return $this->name;
    }

    public function toString(): string
    {
        return $this->name;
    }
}
