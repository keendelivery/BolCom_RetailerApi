<?php

// phpcs:ignoreFile
// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Rma;

final class ReducedReturnItem
{
    private $rmaId;
    private $orderId;
    private $ean;
    private $quantity;
    private $registrationDateTime;
    private $returnReason;
    private $returnReasonComments;
    private $fulfilmentMethod;
    private $handled;
    private $handlingResult;
    private $processingResult;
    private $processingDateTime;

    public function __construct(RmaId $rmaId, \BolCom\RetailerApi\Model\Order\OrderId $orderId, \BolCom\RetailerApi\Model\Offer\Ean $ean, int $quantity, \BolCom\RetailerApi\Model\DateTime $registrationDateTime, ?string $returnReason, ?string $returnReasonComments, \BolCom\RetailerApi\Model\Offer\FulfilmentMethod $fulfilmentMethod, bool $handled, ?HandlingResult $handlingResult, ?ProcessingResult $processingResult, ?\BolCom\RetailerApi\Model\DateTime $processingDateTime)
    {
        $this->rmaId = $rmaId;
        $this->orderId = $orderId;
        $this->ean = $ean;
        $this->quantity = $quantity;
        $this->registrationDateTime = $registrationDateTime;
        $this->returnReason = $returnReason;
        $this->returnReasonComments = $returnReasonComments;
        $this->fulfilmentMethod = $fulfilmentMethod;
        $this->handled = $handled;
        $this->handlingResult = $handlingResult;
        $this->processingResult = $processingResult;
        $this->processingDateTime = $processingDateTime;
    }

    public function rmaId(): RmaId
    {
        return $this->rmaId;
    }

    public function orderId(): \BolCom\RetailerApi\Model\Order\OrderId
    {
        return $this->orderId;
    }

    public function ean(): \BolCom\RetailerApi\Model\Offer\Ean
    {
        return $this->ean;
    }

    public function quantity(): int
    {
        return $this->quantity;
    }

    public function registrationDateTime(): \BolCom\RetailerApi\Model\DateTime
    {
        return $this->registrationDateTime;
    }

    public function returnReason(): ?string
    {
        return $this->returnReason;
    }

    public function returnReasonComments(): ?string
    {
        return $this->returnReasonComments;
    }

    public function fulfilmentMethod(): \BolCom\RetailerApi\Model\Offer\FulfilmentMethod
    {
        return $this->fulfilmentMethod;
    }

    public function handled(): bool
    {
        return $this->handled;
    }

    public function handlingResult(): ?HandlingResult
    {
        return $this->handlingResult;
    }

    public function processingResult(): ?ProcessingResult
    {
        return $this->processingResult;
    }

    public function processingDateTime(): ?\BolCom\RetailerApi\Model\DateTime
    {
        return $this->processingDateTime;
    }

    public function withRmaId(RmaId $rmaId): ReducedReturnItem
    {
        return new self($rmaId, $this->orderId, $this->ean, $this->quantity, $this->registrationDateTime, $this->returnReason, $this->returnReasonComments, $this->fulfilmentMethod, $this->handled, $this->handlingResult, $this->processingResult, $this->processingDateTime);
    }

    public function withOrderId(\BolCom\RetailerApi\Model\Order\OrderId $orderId): ReducedReturnItem
    {
        return new self($this->rmaId, $orderId, $this->ean, $this->quantity, $this->registrationDateTime, $this->returnReason, $this->returnReasonComments, $this->fulfilmentMethod, $this->handled, $this->handlingResult, $this->processingResult, $this->processingDateTime);
    }

    public function withEan(\BolCom\RetailerApi\Model\Offer\Ean $ean): ReducedReturnItem
    {
        return new self($this->rmaId, $this->orderId, $ean, $this->quantity, $this->registrationDateTime, $this->returnReason, $this->returnReasonComments, $this->fulfilmentMethod, $this->handled, $this->handlingResult, $this->processingResult, $this->processingDateTime);
    }

    public function withQuantity(int $quantity): ReducedReturnItem
    {
        return new self($this->rmaId, $this->orderId, $this->ean, $quantity, $this->registrationDateTime, $this->returnReason, $this->returnReasonComments, $this->fulfilmentMethod, $this->handled, $this->handlingResult, $this->processingResult, $this->processingDateTime);
    }

    public function withRegistrationDateTime(\BolCom\RetailerApi\Model\DateTime $registrationDateTime): ReducedReturnItem
    {
        return new self($this->rmaId, $this->orderId, $this->ean, $this->quantity, $registrationDateTime, $this->returnReason, $this->returnReasonComments, $this->fulfilmentMethod, $this->handled, $this->handlingResult, $this->processingResult, $this->processingDateTime);
    }

    public function withReturnReason(?string $returnReason): ReducedReturnItem
    {
        return new self($this->rmaId, $this->orderId, $this->ean, $this->quantity, $this->registrationDateTime, $returnReason, $this->returnReasonComments, $this->fulfilmentMethod, $this->handled, $this->handlingResult, $this->processingResult, $this->processingDateTime);
    }

    public function withReturnReasonComments(?string $returnReasonComments): ReducedReturnItem
    {
        return new self($this->rmaId, $this->orderId, $this->ean, $this->quantity, $this->registrationDateTime, $this->returnReason, $returnReasonComments, $this->fulfilmentMethod, $this->handled, $this->handlingResult, $this->processingResult, $this->processingDateTime);
    }

    public function withFulfilmentMethod(\BolCom\RetailerApi\Model\Offer\FulfilmentMethod $fulfilmentMethod): ReducedReturnItem
    {
        return new self($this->rmaId, $this->orderId, $this->ean, $this->quantity, $this->registrationDateTime, $this->returnReason, $this->returnReasonComments, $fulfilmentMethod, $this->handled, $this->handlingResult, $this->processingResult, $this->processingDateTime);
    }

    public function withHandled(bool $handled): ReducedReturnItem
    {
        return new self($this->rmaId, $this->orderId, $this->ean, $this->quantity, $this->registrationDateTime, $this->returnReason, $this->returnReasonComments, $this->fulfilmentMethod, $handled, $this->handlingResult, $this->processingResult, $this->processingDateTime);
    }

    public function withHandlingResult(?HandlingResult $handlingResult): ReducedReturnItem
    {
        return new self($this->rmaId, $this->orderId, $this->ean, $this->quantity, $this->registrationDateTime, $this->returnReason, $this->returnReasonComments, $this->fulfilmentMethod, $this->handled, $handlingResult, $this->processingResult, $this->processingDateTime);
    }

    public function withProcessingResult(?ProcessingResult $processingResult): ReducedReturnItem
    {
        return new self($this->rmaId, $this->orderId, $this->ean, $this->quantity, $this->registrationDateTime, $this->returnReason, $this->returnReasonComments, $this->fulfilmentMethod, $this->handled, $this->handlingResult, $processingResult, $this->processingDateTime);
    }

    public function withProcessingDateTime(?\BolCom\RetailerApi\Model\DateTime $processingDateTime): ReducedReturnItem
    {
        return new self($this->rmaId, $this->orderId, $this->ean, $this->quantity, $this->registrationDateTime, $this->returnReason, $this->returnReasonComments, $this->fulfilmentMethod, $this->handled, $this->handlingResult, $this->processingResult, $processingDateTime);
    }

    public static function fromArray(array $data): ReducedReturnItem
    {
        if (! isset($data['rmaId']) || ! \is_int($data['rmaId'])) {
            throw new \InvalidArgumentException("Key 'rmaId' is missing in data array or is not a int");
        }

        $rmaId = RmaId::fromScalar($data['rmaId']);

        if (! isset($data['orderId']) || ! \is_string($data['orderId'])) {
            throw new \InvalidArgumentException("Key 'orderId' is missing in data array or is not a string");
        }

        $orderId = \BolCom\RetailerApi\Model\Order\OrderId::fromString($data['orderId']);

        if (! isset($data['ean']) || ! \is_string($data['ean'])) {
            throw new \InvalidArgumentException("Key 'ean' is missing in data array or is not a string");
        }

        $ean = \BolCom\RetailerApi\Model\Offer\Ean::fromString($data['ean']);

        if (! isset($data['quantity']) || ! \is_int($data['quantity'])) {
            throw new \InvalidArgumentException("Key 'quantity' is missing in data array or is not a int");
        }

        $quantity = $data['quantity'];

        if (! isset($data['registrationDateTime']) || ! \is_string($data['registrationDateTime'])) {
            throw new \InvalidArgumentException("Key 'registrationDateTime' is missing in data array or is not a string");
        }

        $registrationDateTime = \BolCom\RetailerApi\Model\DateTime::fromString($data['registrationDateTime']);

        if (isset($data['returnReason'])) {
            if (! \is_string($data['returnReason'])) {
                throw new \InvalidArgumentException("Value for 'returnReason' is not a string in data array");
            }

            $returnReason = $data['returnReason'];
        } else {
            $returnReason = null;
        }

        if (isset($data['returnReasonComments'])) {
            if (! \is_string($data['returnReasonComments'])) {
                throw new \InvalidArgumentException("Value for 'returnReasonComments' is not a string in data array");
            }

            $returnReasonComments = $data['returnReasonComments'];
        } else {
            $returnReasonComments = null;
        }

        if (! isset($data['fulfilmentMethod']) || ! \is_string($data['fulfilmentMethod'])) {
            throw new \InvalidArgumentException("Key 'fulfilmentMethod' is missing in data array or is not a string");
        }

        $fulfilmentMethod = \BolCom\RetailerApi\Model\Offer\FulfilmentMethod::fromValue($data['fulfilmentMethod']);

        if (! isset($data['handled']) || ! \is_bool($data['handled'])) {
            throw new \InvalidArgumentException("Key 'handled' is missing in data array or is not a bool");
        }

        $handled = $data['handled'];

        if (isset($data['handlingResult'])) {
            if (! \is_string($data['handlingResult'])) {
                throw new \InvalidArgumentException("Value for 'handlingResult' is not a string in data array");
            }

            $handlingResult = HandlingResult::fromValue($data['handlingResult']);
        } else {
            $handlingResult = null;
        }

        if (isset($data['processingResult'])) {
            if (! \is_string($data['processingResult'])) {
                throw new \InvalidArgumentException("Value for 'processingResult' is not a string in data array");
            }

            $processingResult = ProcessingResult::fromValue($data['processingResult']);
        } else {
            $processingResult = null;
        }

        if (isset($data['processingDateTime'])) {
            if (! \is_string($data['processingDateTime'])) {
                throw new \InvalidArgumentException("Value for 'processingDateTime' is not a string in data array");
            }

            $processingDateTime = \BolCom\RetailerApi\Model\DateTime::fromString($data['processingDateTime']);
        } else {
            $processingDateTime = null;
        }

        return new self(
            $rmaId,
            $orderId,
            $ean,
            $quantity,
            $registrationDateTime,
            $returnReason,
            $returnReasonComments,
            $fulfilmentMethod,
            $handled,
            $handlingResult,
            $processingResult,
            $processingDateTime
        );
    }
}
