<?php

// phpcs:ignoreFile
// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Transport;

final class Transport
{
    private $transportId;
    private $transporterCode;
    private $trackAndTrace;

    public function __construct(TransportId $transportId, TransporterCode $transporterCode, ?TrackAndTrace $trackAndTrace)
    {
        $this->transportId = $transportId;
        $this->transporterCode = $transporterCode;
        $this->trackAndTrace = $trackAndTrace;
    }

    public function transportId(): TransportId
    {
        return $this->transportId;
    }

    public function transporterCode(): TransporterCode
    {
        return $this->transporterCode;
    }

    public function trackAndTrace(): ?TrackAndTrace
    {
        return $this->trackAndTrace;
    }

    public function withTransportId(TransportId $transportId): Transport
    {
        return new self($transportId, $this->transporterCode, $this->trackAndTrace);
    }

    public function withTransporterCode(TransporterCode $transporterCode): Transport
    {
        return new self($this->transportId, $transporterCode, $this->trackAndTrace);
    }

    public function withTrackAndTrace(?TrackAndTrace $trackAndTrace): Transport
    {
        return new self($this->transportId, $this->transporterCode, $trackAndTrace);
    }

    public static function fromArray(array $data): Transport
    {
        if (! isset($data['transportId']) || ! \is_int($data['transportId'])) {
            throw new \InvalidArgumentException("Key 'transportId' is missing in data array or is not a int");
        }

        $transportId = TransportId::fromScalar($data['transportId']);

        if (! isset($data['transporterCode']) || ! \is_string($data['transporterCode'])) {
            throw new \InvalidArgumentException("Key 'transporterCode' is missing in data array or is not a string");
        }

        $transporterCode = TransporterCode::fromValue($data['transporterCode']);

        if (isset($data['trackAndTrace'])) {
            if (! \is_string($data['trackAndTrace'])) {
                throw new \InvalidArgumentException("Value for 'trackAndTrace' is not a string in data array");
            }

            $trackAndTrace = TrackAndTrace::fromScalar($data['trackAndTrace']);
        } else {
            $trackAndTrace = null;
        }

        return new self(
            $transportId,
            $transporterCode,
            $trackAndTrace
        );
    }
}
